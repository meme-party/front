/* tslint:disable */
/* eslint-disable */
/**
 * Dionysus API
 * Meme Project
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: dev.shinkeonkim@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime"
import type { Meme } from "./Meme"
import { MemeFromJSON, MemeFromJSONTyped, MemeToJSON, MemeToJSONTyped } from "./Meme"

/**
 *
 * @export
 * @interface PaginatedMemeList
 */
export interface PaginatedMemeList {
  /**
   *
   * @type {number}
   * @memberof PaginatedMemeList
   */
  count: number
  /**
   *
   * @type {string}
   * @memberof PaginatedMemeList
   */
  next?: string | null
  /**
   *
   * @type {string}
   * @memberof PaginatedMemeList
   */
  previous?: string | null
  /**
   *
   * @type {Array<Meme>}
   * @memberof PaginatedMemeList
   */
  results: Array<Meme>
}

/**
 * Check if a given object implements the PaginatedMemeList interface.
 */
export function instanceOfPaginatedMemeList(value: object): value is PaginatedMemeList {
  if (!("count" in value) || value["count"] === undefined) return false
  if (!("results" in value) || value["results"] === undefined) return false
  return true
}

export function PaginatedMemeListFromJSON(json: any): PaginatedMemeList {
  return PaginatedMemeListFromJSONTyped(json, false)
}

export function PaginatedMemeListFromJSONTyped(json: any, ignoreDiscriminator: boolean): PaginatedMemeList {
  if (json == null) {
    return json
  }
  return {
    count: json["count"],
    next: json["next"] == null ? undefined : json["next"],
    previous: json["previous"] == null ? undefined : json["previous"],
    results: (json["results"] as Array<any>).map(MemeFromJSON)
  }
}

export function PaginatedMemeListToJSON(json: any): PaginatedMemeList {
  return PaginatedMemeListToJSONTyped(json, false)
}

export function PaginatedMemeListToJSONTyped(
  value?: PaginatedMemeList | null,
  ignoreDiscriminator: boolean = false
): any {
  if (value == null) {
    return value
  }

  return {
    count: value["count"],
    next: value["next"],
    previous: value["previous"],
    results: (value["results"] as Array<any>).map(MemeToJSON)
  }
}

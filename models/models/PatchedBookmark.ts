/* tslint:disable */
/* eslint-disable */
/**
 * Dionysus API
 * Meme Project
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: dev.shinkeonkim@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime"
/**
 *
 * @export
 * @interface PatchedBookmark
 */
export interface PatchedBookmark {
  /**
   *
   * @type {number}
   * @memberof PatchedBookmark
   */
  readonly id?: number
  /**
   *
   * @type {string}
   * @memberof PatchedBookmark
   */
  title?: string
  /**
   *
   * @type {number}
   * @memberof PatchedBookmark
   */
  readonly bookmarkingsCount?: number
  /**
   *
   * @type {Date}
   * @memberof PatchedBookmark
   */
  readonly createdAt?: Date
  /**
   *
   * @type {Date}
   * @memberof PatchedBookmark
   */
  readonly updatedAt?: Date
}

/**
 * Check if a given object implements the PatchedBookmark interface.
 */
export function instanceOfPatchedBookmark(value: object): value is PatchedBookmark {
  return true
}

export function PatchedBookmarkFromJSON(json: any): PatchedBookmark {
  return PatchedBookmarkFromJSONTyped(json, false)
}

export function PatchedBookmarkFromJSONTyped(json: any, ignoreDiscriminator: boolean): PatchedBookmark {
  if (json == null) {
    return json
  }
  return {
    id: json["id"] == null ? undefined : json["id"],
    title: json["title"] == null ? undefined : json["title"],
    bookmarkingsCount: json["bookmarkings_count"] == null ? undefined : json["bookmarkings_count"],
    createdAt: json["created_at"] == null ? undefined : new Date(json["created_at"]),
    updatedAt: json["updated_at"] == null ? undefined : new Date(json["updated_at"])
  }
}

export function PatchedBookmarkToJSON(json: any): PatchedBookmark {
  return PatchedBookmarkToJSONTyped(json, false)
}

export function PatchedBookmarkToJSONTyped(
  value?: Omit<PatchedBookmark, "id" | "bookmarkings_count" | "created_at" | "updated_at"> | null,
  ignoreDiscriminator: boolean = false
): any {
  if (value == null) {
    return value
  }

  return {
    title: value["title"]
  }
}

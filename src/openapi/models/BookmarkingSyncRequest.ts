/* tslint:disable */
/* eslint-disable */
/**
 * Dionysus API
 * Meme Project
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: dev.shinkeonkim@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime"
/**
 *
 * @export
 * @interface BookmarkingSyncRequest
 */
export interface BookmarkingSyncRequest {
  /**
   * The ID of the Meme to sync.
   * @type {number}
   * @memberof BookmarkingSyncRequest
   */
  memeId: number
  /**
   * List of Bookmark IDs belonging to the user.
   * @type {Array<number>}
   * @memberof BookmarkingSyncRequest
   */
  bookmarkIds: Array<number>
  /**
   * If true, Bookmarkings without a Bookmark will be saved.
   * @type {boolean}
   * @memberof BookmarkingSyncRequest
   */
  withoutBookmark?: boolean
}

/**
 * Check if a given object implements the BookmarkingSyncRequest interface.
 */
export function instanceOfBookmarkingSyncRequest(value: object): value is BookmarkingSyncRequest {
  if (!("memeId" in value) || value["memeId"] === undefined) return false
  if (!("bookmarkIds" in value) || value["bookmarkIds"] === undefined) return false
  return true
}

export function BookmarkingSyncRequestFromJSON(json: any): BookmarkingSyncRequest {
  return BookmarkingSyncRequestFromJSONTyped(json, false)
}

export function BookmarkingSyncRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): BookmarkingSyncRequest {
  if (json == null) {
    return json
  }
  return {
    memeId: json["meme_id"],
    bookmarkIds: json["bookmark_ids"],
    withoutBookmark: json["without_bookmark"] == null ? undefined : json["without_bookmark"]
  }
}

export function BookmarkingSyncRequestToJSON(json: any): BookmarkingSyncRequest {
  return BookmarkingSyncRequestToJSONTyped(json, false)
}

export function BookmarkingSyncRequestToJSONTyped(
  value?: BookmarkingSyncRequest | null,
  ignoreDiscriminator: boolean = false
): any {
  if (value == null) {
    return value
  }

  return {
    meme_id: value["memeId"],
    bookmark_ids: value["bookmarkIds"],
    without_bookmark: value["withoutBookmark"]
  }
}

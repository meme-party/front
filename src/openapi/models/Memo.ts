/* tslint:disable */
/* eslint-disable */
/**
 * Dionysus API
 * Meme Project
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: dev.shinkeonkim@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime"
/**
 *
 * @export
 * @interface Memo
 */
export interface Memo {
  /**
   *
   * @type {number}
   * @memberof Memo
   */
  readonly id: number
  /**
   *
   * @type {number}
   * @memberof Memo
   */
  meme: number
  /**
   *
   * @type {string}
   * @memberof Memo
   */
  content: string
  /**
   *
   * @type {Date}
   * @memberof Memo
   */
  readonly createdAt: Date
  /**
   *
   * @type {Date}
   * @memberof Memo
   */
  readonly updatedAt: Date
}

/**
 * Check if a given object implements the Memo interface.
 */
export function instanceOfMemo(value: object): value is Memo {
  if (!("id" in value) || value["id"] === undefined) return false
  if (!("meme" in value) || value["meme"] === undefined) return false
  if (!("content" in value) || value["content"] === undefined) return false
  if (!("createdAt" in value) || value["createdAt"] === undefined) return false
  if (!("updatedAt" in value) || value["updatedAt"] === undefined) return false
  return true
}

export function MemoFromJSON(json: any): Memo {
  return MemoFromJSONTyped(json, false)
}

export function MemoFromJSONTyped(json: any, ignoreDiscriminator: boolean): Memo {
  if (json == null) {
    return json
  }
  return {
    id: json["id"],
    meme: json["meme"],
    content: json["content"],
    createdAt: new Date(json["created_at"]),
    updatedAt: new Date(json["updated_at"])
  }
}

export function MemoToJSON(json: any): Memo {
  return MemoToJSONTyped(json, false)
}

export function MemoToJSONTyped(
  value?: Omit<Memo, "id" | "created_at" | "updated_at"> | null,
  ignoreDiscriminator: boolean = false
): any {
  if (value == null) {
    return value
  }

  return {
    meme: value["meme"],
    content: value["content"]
  }
}

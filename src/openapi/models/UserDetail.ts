/* tslint:disable */
/* eslint-disable */
/**
 * Dionysus API
 * Meme Project
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: dev.shinkeonkim@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime"
import type { SocialAccount } from "./SocialAccount"
import {
  SocialAccountFromJSON,
  SocialAccountFromJSONTyped,
  SocialAccountToJSON,
  SocialAccountToJSONTyped
} from "./SocialAccount"

/**
 * UserSerializer를 확장하여 소셜 계정 정보를 포함
 * @export
 * @interface UserDetail
 */
export interface UserDetail {
  /**
   *
   * @type {number}
   * @memberof UserDetail
   */
  readonly pk: number
  /**
   *
   * @type {string}
   * @memberof UserDetail
   */
  readonly email: string
  /**
   *
   * @type {string}
   * @memberof UserDetail
   */
  username?: string
  /**
   *
   * @type {Array<SocialAccount>}
   * @memberof UserDetail
   */
  readonly socialAccount: Array<SocialAccount>
}

/**
 * Check if a given object implements the UserDetail interface.
 */
export function instanceOfUserDetail(value: object): value is UserDetail {
  if (!("pk" in value) || value["pk"] === undefined) return false
  if (!("email" in value) || value["email"] === undefined) return false
  if (!("socialAccount" in value) || value["socialAccount"] === undefined) return false
  return true
}

export function UserDetailFromJSON(json: any): UserDetail {
  return UserDetailFromJSONTyped(json, false)
}

export function UserDetailFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserDetail {
  if (json == null) {
    return json
  }
  return {
    pk: json["pk"],
    email: json["email"],
    username: json["username"] == null ? undefined : json["username"],
    socialAccount: (json["social_account"] as Array<any>).map(SocialAccountFromJSON)
  }
}

export function UserDetailToJSON(json: any): UserDetail {
  return UserDetailToJSONTyped(json, false)
}

export function UserDetailToJSONTyped(
  value?: Omit<UserDetail, "pk" | "email" | "social_account"> | null,
  ignoreDiscriminator: boolean = false
): any {
  if (value == null) {
    return value
  }

  return {
    username: value["username"]
  }
}

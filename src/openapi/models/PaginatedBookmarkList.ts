/* tslint:disable */
/* eslint-disable */
/**
 * Dionysus API
 * Meme Project
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: dev.shinkeonkim@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime"
import type { Bookmark } from "./Bookmark"
import { BookmarkFromJSON, BookmarkFromJSONTyped, BookmarkToJSON, BookmarkToJSONTyped } from "./Bookmark"

/**
 *
 * @export
 * @interface PaginatedBookmarkList
 */
export interface PaginatedBookmarkList {
  /**
   *
   * @type {number}
   * @memberof PaginatedBookmarkList
   */
  count: number
  /**
   *
   * @type {string}
   * @memberof PaginatedBookmarkList
   */
  next?: string | null
  /**
   *
   * @type {string}
   * @memberof PaginatedBookmarkList
   */
  previous?: string | null
  /**
   *
   * @type {Array<Bookmark>}
   * @memberof PaginatedBookmarkList
   */
  results: Array<Bookmark>
}

/**
 * Check if a given object implements the PaginatedBookmarkList interface.
 */
export function instanceOfPaginatedBookmarkList(value: object): value is PaginatedBookmarkList {
  if (!("count" in value) || value["count"] === undefined) return false
  if (!("results" in value) || value["results"] === undefined) return false
  return true
}

export function PaginatedBookmarkListFromJSON(json: any): PaginatedBookmarkList {
  return PaginatedBookmarkListFromJSONTyped(json, false)
}

export function PaginatedBookmarkListFromJSONTyped(json: any, ignoreDiscriminator: boolean): PaginatedBookmarkList {
  if (json == null) {
    return json
  }
  return {
    count: json["count"],
    next: json["next"] == null ? undefined : json["next"],
    previous: json["previous"] == null ? undefined : json["previous"],
    results: (json["results"] as Array<any>).map(BookmarkFromJSON)
  }
}

export function PaginatedBookmarkListToJSON(json: any): PaginatedBookmarkList {
  return PaginatedBookmarkListToJSONTyped(json, false)
}

export function PaginatedBookmarkListToJSONTyped(
  value?: PaginatedBookmarkList | null,
  ignoreDiscriminator: boolean = false
): any {
  if (value == null) {
    return value
  }

  return {
    count: value["count"],
    next: value["next"],
    previous: value["previous"],
    results: (value["results"] as Array<any>).map(BookmarkToJSON)
  }
}
